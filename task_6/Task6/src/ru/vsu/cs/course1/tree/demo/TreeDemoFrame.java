package ru.vsu.cs.course1.tree.demo;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import ru.vsu.cs.course1.tree.WordSearch;


import javax.swing.*;
import java.awt.*;

public class TreeDemoFrame extends JFrame {
    private JPanel panelMain;

    private JButton buttonDo;
    private JTextField textFieldN;
    private JTextField textFieldK;
    private JTextArea textAreaInput;
    private JTextArea textAreaOutDefult;
    private JTextArea textAreaOutHandMake;

    public TreeDemoFrame() {
        this.setTitle("Двоичные деревья");
        this.setContentPane(panelMain);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.pack();


        //FileFilter filter = new FileNameExtensionFilter("SVG images", "svg");

        buttonDo.addActionListener(actionEvent -> {

            WordSearch ws = new WordSearch();
            textAreaOutDefult.setText(ws.getSearchDefultMup(Integer.parseInt(textFieldN.getText()), Integer.parseInt(textFieldK.getText()), textAreaInput.getText()));
            textAreaOutHandMake.setText(ws.getSearchHandMup(Integer.parseInt(textFieldN.getText()), Integer.parseInt(textFieldK.getText()), textAreaInput.getText()));
        });

    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelMain = new JPanel();
        panelMain.setLayout(new GridLayoutManager(3, 3, new Insets(10, 10, 10, 10), 10, 10));
        final JScrollPane scrollPane1 = new JScrollPane();
        panelMain.add(scrollPane1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JScrollPane scrollPane2 = new JScrollPane();
        scrollPane1.setViewportView(scrollPane2);
        final JScrollPane scrollPane3 = new JScrollPane();
        scrollPane2.setViewportView(scrollPane3);
        textAreaInput = new JTextArea();
        textAreaInput.setBackground(new Color(-10066330));
        textAreaInput.setText("Октябрь уж наступил — уж роща отряхает Последние листы с нагих своих ветвей; Дохнул осенний хлад — дорога промерзает. Журча еще бежит за мельницу ручей, Но пруд уже застыл; сосед мой поспешает В отъезжие поля с охотою своей, И страждут озими от бешеной забавы, И будит лай собак уснувшие дубравы.  II Теперь моя пора: я не люблю весны; Скучна мне оттепель; вонь, грязь — весной я болен; Кровь бродит; чувства, ум тоскою стеснены. Суровою зимой я более доволен, Люблю ее снега; в присутствии луны Как легкий бег саней с подругой быстр и волен, Когда под соболем, согрета и свежа, Она вам руку жмет, пылая и дрожа!  III Как весело, обув железом острым ноги, Скользить по зеркалу стоячих, ровных рек! А зимних праздников блестящие тревоги?.. Но надо знать и честь; полгода снег да снег, Ведь это наконец и жителю берлоги, Медведю, надоест. Нельзя же целый век Кататься нам в санях с Армидами младыми Иль киснуть у печей за стеклами двойными.  IV Ох, лето красное! любил бы я тебя, Когда б не зной, да пыль, да комары, да мухи. Ты, все душевные способности губя, Нас мучишь; как поля, мы страждем от засухи; Лишь как бы напоить, да освежить себя — Иной в нас мысли нет, и жаль зимы старухи, И, проводив ее блинами и вином, Поминки ей творим мороженым и льдом.  V Дни поздней осени бранят обыкновенно, Но мне она мила, читатель дорогой, Красою тихою, блистающей смиренно. Так нелюбимое дитя в семье родной К себе меня влечет. Сказать вам откровенно, Из годовых времен я рад лишь ей одной, В ней много доброго; любовник не тщеславный, Я нечто в ней нашел мечтою своенравной.  VI Как это объяснить? Мне нравится она, Как, вероятно, вам чахоточная дева Порою нравится. На смерть осуждена, Бедняжка клонится без ропота, без гнева. Улыбка на устах увянувших видна; Могильной пропасти она не слышит зева; Играет на лице еще багровый цвет. Она жива еще сегодня, завтра нет.  VII Унылая пора! очей очарованье! Приятна мне твоя прощальная краса — Люблю я пышное природы увяданье, В багрец и в золото одетые леса, В их сенях ветра шум и свежее дыханье, И мглой волнистою покрыты небеса, И редкий солнца луч, и первые морозы, И отдаленные седой зимы угрозы.");
        scrollPane3.setViewportView(textAreaInput);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        panelMain.add(panel1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel2, new GridConstraints(0, 0, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        textFieldN = new JTextField();
        textFieldN.setText("5");
        panel2.add(textFieldN, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        textFieldK = new JTextField();
        textFieldK.setText("5");
        panel2.add(textFieldK, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Кол-во слов N");
        panel2.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Минимальная длина слова K");
        panel2.add(label2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonDo = new JButton();
        buttonDo.setText("Найти");
        panel1.add(buttonDo, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Входной текст");
        panelMain.add(label3, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane4 = new JScrollPane();
        panelMain.add(scrollPane4, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        textAreaOutDefult = new JTextArea();
        textAreaOutDefult.setText("");
        scrollPane4.setViewportView(textAreaOutDefult);
        final JScrollPane scrollPane5 = new JScrollPane();
        panelMain.add(scrollPane5, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        textAreaOutHandMake = new JTextArea();
        textAreaOutHandMake.setText("");
        scrollPane5.setViewportView(textAreaOutHandMake);
        final JLabel label4 = new JLabel();
        label4.setText("Самые частовстречаемые слова дефолт мап");
        panelMain.add(label4, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setText("Самые частовстречаемые слова рукотворная мап");
        panelMain.add(label5, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelMain;
    }

}
